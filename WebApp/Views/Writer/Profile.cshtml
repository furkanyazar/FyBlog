@using Business.Constants
@using Entities.DTOs
@model WriterDto

@{
	ViewData["Title"] = "Profilim";
	Layout = "~/Views/Shared/_WriterLayout.cshtml";
}

<div class="col-12 grid-margin stretch-card">
	<div class="card">
		<div class="card-body">
			<h4 class="card-title">Profilim</h4>
			@using (Html.BeginForm("Profile", "Writer", FormMethod.Post, new { enctype = "multipart/form-data" }))
			{
				<div class="form-group">
					<input type="hidden" name="UserId" value="@Context.User.Claims.SingleOrDefault(x => x.Type == "UserId").Value" />
					@Html.HiddenFor(x => x.UserImageUrl)
					@Html.Label("Ad")
					@Html.TextBoxFor(x => x.UserFirstName, new { @class = "form-control", @placeholder = "Ad" })
					@Html.ValidationMessageFor(x => x.UserFirstName, "", new { @class = "text-danger" })
				</div>
				<div class="form-group">
					@Html.Label("Soyad")
					@Html.TextBoxFor(x => x.UserLastName, new { @class = "form-control", @placeholder = "Soyad" })
					@Html.ValidationMessageFor(x => x.UserLastName, "", new { @class = "text-danger" })
				</div>
				<div class="form-group">
					@Html.Label("E-posta")
					@Html.TextBoxFor(x => x.UserEmail, new { @class = "form-control", @placeholder = "E-posta", @type = "email" })
					@Html.ValidationMessageFor(x => x.UserEmail, "", new { @class = "text-danger" })
				</div>
				<div class="form-group">
					@Html.Label("Şifre")
					@Html.PasswordFor(x => x.UserPassword, new { @class = "form-control", @placeholder = "Değiştirmek için doldurunuz" })
					@Html.ValidationMessageFor(x => x.UserPassword, "", new { @class = "text-danger" })
				</div>
				<div class="form-group">
					@Html.Label("Fotoğraf")
					<input id="inpImage" type="file" accept="image/png, image/jpeg" name="UserImage" class="file-upload-default">
					<div class="input-group col-xs-12">
						<input type="text" class="form-control file-upload-info" disabled placeholder="Fotoğraf">
						<span class="input-group-append">
							<button class="file-upload-browse btn btn-gradient-primary" type="button">Yükle</button>
						</span>
					</div>
					@Html.ValidationMessageFor(x => x.UserImageUrl, "", new { @class = "text-danger" })
				</div>
				<div id="image" class="form-group">
					<img class="rounded" src="@Model.UserImageUrl" style="max-width: 100%; max-height: 300px;" />
				</div>
				@if (@Model.UserImageUrl != Defaults.DEFAULT_AVATAR_URL)
				{
					<div class="form-group">
						<a class="btn btn-gradient-light" asp-controller="Writer" asp-action="DeletePhoto" asp-route-userId="@User.Claims.SingleOrDefault(x => x.Type == "UserId").Value">Kaldır</a>
					</div>
				}
				<div class="form-group">
					@Html.Label("Hakkımda")
					<textarea class="form-control" name="WriterAbout" rows="5">@Model.WriterAbout</textarea>
					@Html.ValidationMessageFor(x => x.WriterAbout, "", new { @class = "text-danger" })
				</div>
				<button type="submit" class="btn btn-gradient-primary mr-2">Kaydet</button>
				<a class="btn btn-gradient-light" asp-controller="Writer" asp-action="Index">İptal</a>
			}
		</div>
	</div>
</div>
<script>
	$("#inpImage").change(function(event) {
		$("#image").html("");

		var img = document.createElement("img");
		img.src = URL.createObjectURL(event.target.files[0]);
		img.style = "max-width: 100%; max-height: 150px;";
		img.className = "rounded";

		$("#image").append(img);
	});
</script>
