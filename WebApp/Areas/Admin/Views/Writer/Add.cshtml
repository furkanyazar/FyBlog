@using Entities.DTOs

@model UserRegisterDto

@{
    ViewData["Title"] = "Yazar Ekle";
    Layout = "~/Areas/Admin/Views/Shared/_AdminLayout.cshtml";
}

<div class="row">
	<div class="col-lg-12">
		<div class="ibox ">
			<div class="ibox-title">
				<h5>Yazar Ekle</h5>
			</div>
			<div class="ibox-content">
				@using (Html.BeginForm("Add", "Writer", FormMethod.Post))
				{
					<div class="form-group">
						@Html.Label("Ad")
						@Html.TextBoxFor(x => x.UserFirstName, new { @class = "form-control", @placeholder = "Ad" })
						@Html.ValidationMessageFor(x => x.UserFirstName, "", new { @class = "text-danger" })
					</div>
					<div class="form-group">
						@Html.Label("Soyad")
						@Html.TextBoxFor(x => x.UserLastName, new { @class = "form-control", @placeholder = "Soyad" })
						@Html.ValidationMessageFor(x => x.UserLastName, "", new { @class = "text-danger" })
					</div>
					<div class="form-group">
						@Html.Label("E-posta")
						@Html.TextBoxFor(x => x.UserEmail, new { @class = "form-control", @placeholder = "E-posta", @type = "email" })
						@Html.ValidationMessageFor(x => x.UserEmail, "", new { @class = "text-danger" })
					</div>
					<div class="form-group">
						@Html.Label("Şifre")
						@Html.PasswordFor(x => x.UserPassword, new { @class = "form-control", @placeholder = "Şifre" })
						@Html.ValidationMessageFor(x => x.UserPassword, "", new { @class = "text-danger" })
					</div>
					<div>
						<button class="btn btn-primary m-t-n-xs" type="submit"><strong>Kaydet</strong></button>
					</div>
				}
			</div>
		</div>
	</div>
</div>
